<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://odra.dev/blog</id>
    <title>Odra Blog Blog</title>
    <updated>2022-11-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://odra.dev/blog"/>
    <subtitle>Odra Blog Blog</subtitle>
    <icon>https://odra.dev/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Odra 0.2.0 Released]]></title>
        <id>release-020</id>
        <link href="https://odra.dev/blog/release-020"/>
        <updated>2022-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We want to introduce you to the very first public release of the Odra Framework proudly!]]></summary>
        <content type="html"><![CDATA[<p>We want to introduce you to the very first public release of the Odra Framework proudly!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-bit-of-history">A bit of history<a class="hash-link" href="#a-bit-of-history" title="Direct link to heading">​</a></h2><p>More than a year ago Maciej Zieliński resigned from the position of Ecosystem Leader at <a href="https://casperlabs.io" target="_blank" rel="noopener noreferrer">CasperLabs</a>.
Along with Krzysztof Pobiarżyn and Kuba Płaskonka, we formed an engineering team dedicated to smart contracts.</p><p>Looking at the blockchain ecosystems from the smart contract developer perspective there are two universes.
The first one is Solidity, which thrives and is at its best now.
It has a ton of well-tested code and security tooling.
Whenever an EVM-based blockchain pops out it gets populated by forks of DeFi and DAO protocols.
Fascinating network effect emerges - code written for one EVM-based blockchain can be run on every other EVM-based blockchain.
The second universe is Rust which compiles to WebAssembly.
Here developer communities live in the guarded cities of Polkadot, Cosmos, Solana, Casper, and Near.
The code written for one platform is not portable.
The network effect never had a chance to arise.</p><p>The main reason why Odra exists is achieving this cross-chain code reusability.
We could paraphrase a bit and say:
"One to bring them all and in the code bind them."</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="odra-for-casper">Odra for Casper<a class="hash-link" href="#odra-for-casper" title="Direct link to heading">​</a></h2><p>The very first blockchain we have integrated with Odra is Casper.
In comparison to <a href="https://crates.io/crates/casper-contract" target="_blank" rel="noopener noreferrer">casper-contract</a> API, it greatly cuts development time and offers a much lower entry level.
The Odra interface is developer friendly and people familiar with Solidity, <a href="https://crates.io/crates/ink_lang" target="_blank" rel="noopener noreferrer">Ink</a>, or <a href="https://crates.io/crates/near-sdk" target="_blank" rel="noopener noreferrer">Near</a> will feel like at home.
We hope it will unleash the creativity and bring a whole bunch of products onto Casper.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="odra-framework">Odra Framework<a class="hash-link" href="#odra-framework" title="Direct link to heading">​</a></h2><p>Odra is a high-level smart contract framework for Rust, which encourages rapid development and clean, pragmatic design.
Built by experienced developers, it takes care of much of the hassle of smart contract development, enabling you to focus on writing your dapp without reinventing the wheel.
It's free and open source.</p><p>Odra's goal is to become the go-to smart contract framework for all WebAssembly-based blockchains. </p><p>A smart contract written using Odra can be executed on all integrated systems.
We can do it by abstracting over core concepts that all the above systems are built around.
These are type system, storage, entry points, execution context, and testing environment.
We believe it will bring standardization to the development of Rust-based smart contracts and enable code reusability we have not yet seen in this ecosystem.</p><p>Let’s look at a Flipper contract, that holds a boolean value.
The contract has a constructor that sets the initial value, and two entry points: <code>flip()</code> and <code>get()</code>, to change and query the current value, respectively.</p><div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token namespace">odra</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Variable</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[odra::module]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(78, 201, 176)">Flipper</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Variable</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token keyword" style="color:rgb(86, 156, 214)">bool</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[odra::module]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Flipper</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[odra(init)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">bool</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">flip</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">!</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">get</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">get</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">bool</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">get_or_default</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It comes with the CLI tool <!-- -->[cargo-odra]<!-- --> that makes it easy to use Odra.</p><p><img loading="lazy" alt="cargo-odra" src="/assets/images/cargo_odra-57b32f7c1e40dbb498e7b1619f4860e0.gif" width="910" height="482" class="img_ev3q"></p><p>Neat and simple, isn't it? Do you like it? Start flowing with us!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-next">What next<a class="hash-link" href="#what-next" title="Direct link to heading">​</a></h2><p>Let's be honest, we are just starting.
The codebase is still hot.
On the other hand, we are happy with the interfaces we designed.
Now is the time to write documentation and tutorials.
We are also building the modules library inspired by <a href="https://github.com/OpenZeppelin/openzeppelin-contracts/" target="_blank" rel="noopener noreferrer">OpenZeppelin</a>.
The security code audit is still ahead of us.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="join-us">Join us<a class="hash-link" href="#join-us" title="Direct link to heading">​</a></h2><p>Check out the <a href="https://github.com/odradev/odra" target="_blank" rel="noopener noreferrer">Odra GitHub repository</a> for more info on how to get the most out of Odra.
Should you have questions, join <a href="https://discord.gg/Mm5ABc9P8k" target="_blank" rel="noopener noreferrer">our Discord</a>, <a href="https://twitter.com/odradev" target="_blank" rel="noopener noreferrer">our Twitter</a> or write us at <a href="mailto:contact@odra.dev" target="_blank" rel="noopener noreferrer">contact@odra.dev</a>.</p>]]></content>
        <author>
            <name>Kuba Płaskonka</name>
            <uri>https://github.com/kubaplas</uri>
        </author>
        <author>
            <name>Krzysztof Pobiarżyn</name>
            <uri>https://github.com/kpob</uri>
        </author>
        <author>
            <name>Maciej Zieliński</name>
            <uri>https://github.com/zie1ony</uri>
        </author>
    </entry>
</feed>